apiVersion: apps/v1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: mlflow-server-object-store
  namespace: mlflow
spec:
  selector:
    matchLabels:
      app: mlflow-server-object-store # has to match .spec.template.metadata.labels
  strategy:
    # Specifies the strategy used to replace old Pods by new ones
    # Refer: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    type: Recreate
  template:
    metadata:
      labels:
        # This label is used as a selector in Service definition
        app: mlflow-server-object-store
    spec:
      # Volumes used by this deployment
      volumes:
      - name: data
        # This volume is based on PVC
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: mlflow-server-object-store-pvc
      containers:
      - name: minio
        # Volume mounts for this container
        volumeMounts:
        # Volume 'data' is mounted to path '/data'
        - name: data
          mountPath: "/data"
        # Pulls the lastest Minio image from Docker Hub
        image: minio/minio:latest
        command: ["/bin/sh"]
        args: ["-c",  "mkdir /storage && mkdir /storage/mlflow && /usr/bin/minio server /storage"]
        envFrom:
          - configMapRef:
              name: mlflow-server-object-store-config
        ports:
        - containerPort: 9000
        # Readiness probe detects situations when MinIO server instance
        # is not ready to accept traffic. Kubernetes doesn't forward
        # traffic to the pod while readiness checks fail.
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        # Liveness probe detects situations where MinIO server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
---

apiVersion: v1
kind: Service
metadata:
  # This name uniquely identifies the service
  name: mlflow-server-object-store
  namespace: mlflow
spec:
  type: NodePort
  ports:
   - port: 9000
  selector:
    # Looks for labels `app:minio` in the namespace and applies the spec
    app: mlflow-server-object-store

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. This is used in deployment.
  name: mlflow-server-object-store-pvc
  namespace: mlflow
spec:
  storageClassName: "local-path"
  # Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
  accessModes:
    # The volume is mounted as read-write by a single node
    - ReadWriteOnce
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: 10Gi